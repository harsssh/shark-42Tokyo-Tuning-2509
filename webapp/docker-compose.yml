services:
  backend:
    container_name: tuning-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    environment:
      TZ: Asia/Tokyo
      DATABASE_URL: user:password@unix(/var/run/mysqld/mysqld.sock)/42tokyo2508-db
      APP_SOCKET_PATH: /var/run/app/app.sock
    working_dir: /usr/src/backend
    volumes:
      - ./images:/app/images:ro
      - mysql_socket:/var/run/mysqld
      - app_socket:/var/run/app
    networks:
      - webapp-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-I",
          "--unix-socket",
          "/var/run/app/app.sock",
          "http://localhost:8080/api/health",
          "-X",
          "GET",
        ]
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 30s

  frontend:
    container_name: tuning-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    environment:
      - API_BASE_URL=https://${HOSTNAME}.ftt2508.dabaas.net
      - TZ=Asia/Tokyo
    networks:
      - webapp-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health-check"]
      interval: 5s
      timeout: 5s
      retries: 6
      start_period: 20s
    entrypoint: ["sh", "-c", "yarn start --hostname 0.0.0.0 --port 3000"]

  db:
    container_name: tuning-mysql
    image: 42tokyo2508.azurecr.io/mysql:base
    environment:
      TZ: Asia/Tokyo
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: 42tokyo2508-db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/init/remote_csv:/docker-entrypoint-initdb.d/csv
      - ./mysql/init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/init/restoreSQL:/docker-entrypoint-initdb.d/init/restoreSQL
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/migration:/etc/mysql/migration
      - ./mysql/data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
      - mysql_socket:/var/run/mysqld
    networks:
      - webapp-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "127.0.0.1",
          "-u",
          "root",
          "-p$$MYSQL_ROOT_PASSWORD",
        ]
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 1000s

  nginx:
    container_name: tuning-nginx
    image: nginx:stable
    environment:
      TZ: Asia/Tokyo
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /da/tls:/da/tls:ro
      - nginx_logs:/var/log/nginx
      - ./images:/app/images:ro
      - app_socket:/var/run/app
    networks:
      - webapp-network
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy

  pprotein:
    container_name: pprotein
    restart: unless-stopped
    build:
      context: pprotein
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    networks:
      - webapp-network
    volumes:
      - ./pprotein/data:/opt/pprotein/data
      - nginx_logs:/var/log/nginx
      - mysql_logs:/var/log/mysql
    environment:
      PPROTEIN_HTTPLOG: "/var/log/nginx/_access.log"

networks:
  webapp-network:
    name: webapp-network
    external: true

volumes:
  nginx_logs:
  mysql_logs:
  mysql_socket:
  app_socket:
