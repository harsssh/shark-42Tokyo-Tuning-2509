user  nginx;
worker_processes  auto;

events {
    worker_connections  1024; 
    }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout  65;

  # アップストリーム（同一ネットワーク内なので ports: 不要）
  upstream fe { 
    server frontend:3000; 
  }
  upstream be { 
    server unix:/var/run/app/app.sock;
  }

  server {
    listen 80;

    # ヘルスチェック
    location = /health-check { 
        return 200 "ok\n";
        add_header Content-Type text/plain;
        }

    # APIはバックエンドへ
    location /api/ {
      proxy_pass         http://be;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
    }

    # それ以外はフロントへ
    location ^~ /_next/static/ {
        proxy_pass http://fe;
        proxy_set_header   Host $host;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";

        proxy_hide_header Cache-Control;  # ← 上流の Cache-Control を削除
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        proxy_ignore_headers Set-Cookie;
    }
    location = /favicon.ico {
        proxy_pass http://fe;
        proxy_hide_header Cache-Control;  # ← 上流の Cache-Control を削除
        add_header Cache-Control "public, max-age=2592000" always; # 30d
        proxy_ignore_headers Set-Cookie;
    }

    location / {
      proxy_pass         http://fe;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection "upgrade";
    }

    location /_protected/images/ {
        internal;
        alias /app/images/;
        autoindex off;

        add_header Cache-Control "no-store, no-cache, must-revalidate, s-maxage=0" always;
    }
  }
}